{
  "meta": {
    "name": "Decentralized Sparse Deep Artificial Neural Networks in COINSTAC",
    "id": "coinstac-sparse-dinunet",
    "version": "v2.0.3",
    "repository": "https:\/\/github.com\/bishalth01\/sparse_dinunet_implementations",
    "description": "NN implementations in COINSTAC for task that can be run in CPU only. Please use GPU version for GPU acceleration.",
    "compspecVersion": 2
  },
  "computation": {
    "type": "docker",
    "dockerImage": "002552435/coinstac-sparse-dinunet",
    "command": [
      "python"
    ],
    "remote": {
      "type": "docker",
      "dockerImage": "002552435/coinstac-sparse-dinunet",
      "command": [
        "python"
      ]
    },
    "input": {
	   "covariates": {
        "label": "Covariates",
        "type": "csv",
        "items": [
          "boolean",
          "number",
		  "string"
        ],
        "source": "member",
        "order": 1
      },

      "data": {
        "label": "Data",
        "type": "files",
        "items": [
          "Files"
        ],
        "extensions": [
          "csv",
          "txt",
          "h5"
        ],
        "source": "owner",
        "order": 2
      },
      "task_id": {
        "default": "CIFAR10-Classification",
        "values": [
          "FS-Classification",
          "ICA-Classification",
          "CIFAR10-Classification"
        ],
        "label": "Pick a NN task:",
        "type": "select",
        "source": "owner",
        "group": "NN Params",
        "order": 3
      },
      "mode": {
        "default": "train",
        "values": [
          "train",
          "test"
        ],
        "label": "NN Mode:",
        "type": "select",
        "source": "owner",
        "group": "NN Params",
        "order": 4
      },
      "agg_engine": {
        "default": "dSGD",
        "values": [
          "dSGD",
          "rankDAD"
        ],
        "label": "Pick aggregation engine:",
        "type": "select",
        "source": "owner",
        "conditional": {
          "variable": "mode",
          "value": "train"
        },
        "group": "NN Params",
        "order": 5
      },
      "num_reducers": {
        "default": 5,
        "label": "Number of reducers in the aggregator(Depends on number of sites):",
        "type": "number",
        "source": "owner",
        "group": "NN Params",
        "order": 6
      },

      "local_iterations": {
        "default": 1,
        "label": "Local gradient accumulation iterations(effective batch size = batch size * gradient accumulation iterations)",
        "type": "number",
        "source": "owner",
        "group": "NN Params",
        "order": 8
      },
      "learning_rate": {
        "default": 0.001,
        "label": "Learning rate:",
        "type": "number",
        "source": "owner",
        "conditional": {
          "variable": "mode",
          "value": "train"
        },
        "group": "NN Params",
        "order": 9
      },
      "batch_size": {
        "default": 128,
        "label": "Batch Size:",
        "type": "number",
        "source": "owner",
        "group": "NN Params",
        "order": 7
      },
      "epochs": {
        "default": 1,
        "label": "Epochs:",
        "type": "number",
        "source": "owner",
        "conditional": {
          "variable": "mode",
          "value": "train"
        },
        "group": "NN Params",
        "order": 10
      },
      "validation_epochs": {
        "default": 1,
        "label": "Run validation after every epochs:",
        "type": "number",
        "source": "owner",
        "conditional": {
          "variable": "mode",
          "value": "train"
        },
        "group": "NN Params",
        "order": 13
      },
      "precision_bits": {
        "default": "32",
        "label": "Floating point precision for payload:",
        "type": "select",
        "values": [
          "32",
          "16"
        ],
        "source": "owner",
        "conditional": {
          "variable": "mode",
          "value": "train"
        },
        "group": "NN Params",
        "order": 14
      },
      "pin_memory": {
        "default": false,
        "label": "Pin Memory:",
        "type": "boolean",
        "source": "member",
        "group": "NN Params",
        "order": 15
      },
      "num_workers": {
        "default": 0,
        "label": "Number of workers:",
        "type": "number",
        "source": "member",
        "group": "NN Params",
        "order": 16
      },
      "patience": {
        "default": 35,
        "label": "Early stopping patience epochs:",
        "type": "number",
        "source": "owner",
        "conditional": {
          "variable": "mode",
          "value": "train"
        },
        "group": "NN Params",
        "order": 17
      },
      "split_ratio": {
        "default": [
          0.7,
          0.15,
          0.15
        ],
        "label": "Data split ratio for train, validation, test in the same order:",
        "type": "object",
        "source": "owner",
        "group": "NN Params",
        "order": 21
      },
      "num_folds": {
        "default": null,
        "label": "Number of folds for K-Fold Cross Validation(Mutually exclusive with split ratio):",
        "type": "number",
        "source": "owner",
        "group": "NN Params",
        "order": 22
      },
      "resnetmodel": {
      "type": "string",
      "default": "resnet20"
    },
      "CIFAR10-Classification-args": {
        "default": {
		  "labels_files": "site0_covariates.csv",
          "data_column": "cifar10_file_name",
          "labels_column": "labels",
          "input_size": 32,
          "hidden_sizes": [
            256,
            128,
            64,
            32
          ],
          "num_class": 10,
          "dad_reduction_rank": 10,
          "dad_num_pow_iters": 5,
          "dad_tol": 0.001,
          "split_files": []
        },
        "label": "CIFAR10 classification parameters.",
        "type": "object",
        "source": "owner",
        "group": "Computation",
        "conditional": {
          "variable": "task_id",
          "value": "CIFAR10-Classification"
        },
        "order": 23
      },
	      "CIFAR10-Classification_data_conf": {
        "default": {
          "covariates": "site0_covariates.csv",
          "data_column": "cifar10_file_name",
          "labels_column": "labels"
        },
        "label": "FreeSurfer classification data config.",
        "type": "object",
        "source": "member",
        "group": "Computation",
        "conditional": {
          "variable": "task_id",
          "value": "FS-Classification"
        },
        "order": 24
      }},
    "output": {
    },
    "display": {
        "type": "string"
      }
   
  }
}

